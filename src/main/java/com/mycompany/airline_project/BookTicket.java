/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.airline_project;

import java.awt.Color; // Added for custom colors
import javax.swing.BorderFactory; // Added for borders
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ranji
 */
public class BookTicket extends javax.swing.JInternalFrame {
    private String flightID;

    // Define colors for the theme
    private final Color BORDER_COLOR = new Color(180, 180, 180);
    private final Color LIGHT_GRAY_BG = new Color(235, 235, 235); // For main background
    private final Color PANEL_BG = new Color(220, 220, 220);     // For JPanels

    // Updated Button Colors
    private final Color BUTTON_BLUE_BG = new Color(0, 122, 204);    // Primary Blue for "Search", "Book"
    private final Color BUTTON_BLUE_FG = Color.WHITE;
    private final Color BUTTON_SECONDARY_BG = new Color(108, 117, 125); // Secondary Gray for "Calculate Fare"
    private final Color BUTTON_SECONDARY_FG = Color.WHITE;
    private final Color BUTTON_CANCEL_BG = new Color(220, 53, 69);    // Red for "Cancel" button
    private final Color BUTTON_CANCEL_FG = Color.WHITE;


    private final Color TEXT_INPUT_BG = Color.WHITE;
    private final Color TEXT_FG = new Color(50, 50, 50);
    private final Color LABEL_FG = new Color(60, 60, 60);
    private final Color TABLE_HEADER_BG = new Color(200, 200, 200);
    private final Color TABLE_GRID_COLOR = new Color(210, 210, 210);
    private final Color TABLE_SELECTION_BG = new Color(170, 170, 170);
    private final Color TABLE_SELECTION_FG = Color.WHITE;


    public Connection getConnection() throws SQLException, ClassNotFoundException {
        Class.forName("com.mysql.cj.jdbc.Driver");
        return DriverManager.getConnection("jdbc:mysql://127.0.0.1/airline-database", "root", "Ranjith@1654R");
    }
    /**
     * Creates new form BookTicket
     */
    public BookTicket() throws SQLException {
        initComponents();
        // Set the overall background for the JInternalFrame's content pane
        getContentPane().setBackground(LIGHT_GRAY_BG);
        applyButtonStyles(); // Call method to apply new button styles
        AutoID();
    }

    // New method to apply button styles
    private void applyButtonStyles() {
        // Primary buttons (blue)
        jButton1.setBackground(BUTTON_BLUE_BG); // Search Flight
        jButton1.setForeground(BUTTON_BLUE_FG);

        jButton2.setBackground(BUTTON_BLUE_BG); // Book Ticket
        jButton2.setForeground(BUTTON_BLUE_FG);

        jButton5.setBackground(BUTTON_BLUE_BG); // Search Customer
        jButton5.setForeground(BUTTON_BLUE_FG);


        // Secondary buttons (grayish)
        jButton3.setBackground(BUTTON_BLUE_BG); // Calculate Fare
        jButton3.setForeground(BUTTON_BLUE_FG);

        // Cancel button (red)
        jButton4.setBackground(BUTTON_CANCEL_BG); // Cancel
        jButton4.setForeground(BUTTON_CANCEL_FG);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        arrival = new javax.swing.JComboBox<>();
        departure = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        ticketid = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        customerid = new javax.swing.JTextField();
        firstname = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        gender = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        totaltickets = new javax.swing.JTextField();
        fares = new javax.swing.JTextField();
        discount = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        totalFare = new javax.swing.JTextField();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(TEXT_FG);
        jLabel1.setText("Welcome to ticket Booking Panel");

        jPanel1.setBackground(PANEL_BG);
        jPanel1.setBorder(BorderFactory.createEtchedBorder());

        jLabel2.setText("Arrival");
        jLabel2.setForeground(LABEL_FG);

        jLabel3.setText("Departure");
        jLabel3.setForeground(LABEL_FG);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(TEXT_FG);
        jLabel4.setText("Search your Flight");

        arrival.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Delhi", "Bengaluru", "Channai", "Mumbai","Kolkata" }));
        arrival.setBackground(TEXT_INPUT_BG);
        arrival.setForeground(TEXT_FG);
        arrival.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrivalActionPerformed(evt);
            }
        });

        departure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Delhi", "Bengaluru", "Channai", "Mumbai","Kolkata" }));
        departure.setBackground(TEXT_INPUT_BG);
        departure.setForeground(TEXT_FG);

        jButton1.setText("Search");
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(arrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(90, 90, 90)
                                                .addComponent(jButton1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(departure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(147, 147, 147))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(arrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(departure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(49, 49, 49)
                                .addComponent(jButton1)
                                .addContainerGap())
        );

        jScrollPane1.getViewport().setBackground(PANEL_BG);
        table.setBackground(TEXT_INPUT_BG);
        table.setForeground(TEXT_FG);
        table.getTableHeader().setBackground(TABLE_HEADER_BG);
        table.getTableHeader().setForeground(BUTTON_BLUE_FG); // Using a button foreground for header text
        table.setGridColor(TABLE_GRID_COLOR);
        table.setSelectionBackground(TABLE_SELECTION_BG);
        table.setSelectionForeground(TABLE_SELECTION_FG);
        table.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "flightiD", "flightName", "arrival", "departure", "duration", "seats", "Fare", "DateOfFlight"
                }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel5.setText("Tiket ID :");
        jLabel5.setForeground(LABEL_FG);

        ticketid.setBackground(TEXT_INPUT_BG);
        ticketid.setForeground(TEXT_FG);
        ticketid.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));
        ticketid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticketidActionPerformed(evt);
            }
        });

        jPanel2.setBackground(PANEL_BG);
        jPanel2.setBorder(BorderFactory.createEtchedBorder());

        jLabel6.setText("Customer ID:");
        jLabel6.setForeground(LABEL_FG);
        jLabel7.setText("First Name :");
        jLabel7.setForeground(LABEL_FG);
        jLabel8.setText("Last Name :");
        jLabel8.setForeground(LABEL_FG);
        jLabel9.setText("Contact :");
        jLabel9.setForeground(LABEL_FG);
        jLabel10.setText("Gender :");
        jLabel10.setForeground(LABEL_FG);
        jLabel11.setText("Fares :");
        jLabel11.setForeground(LABEL_FG);
        jLabel12.setText("Total Tickets :");
        jLabel12.setForeground(LABEL_FG);
        jLabel13.setText("Discount :");
        jLabel13.setForeground(LABEL_FG);
        jLabel14.setText("Total Fare : ");
        jLabel14.setForeground(LABEL_FG);

        customerid.setBackground(TEXT_INPUT_BG);
        customerid.setForeground(TEXT_FG);
        customerid.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));
        customerid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customeridActionPerformed(evt);
            }
        });

        firstname.setBackground(TEXT_INPUT_BG);
        firstname.setForeground(TEXT_FG);
        firstname.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));

        lastname.setBackground(TEXT_INPUT_BG);
        lastname.setForeground(TEXT_FG);
        lastname.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));
        lastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastnameActionPerformed(evt);
            }
        });

        gender.setBackground(TEXT_INPUT_BG);
        gender.setForeground(TEXT_FG);
        gender.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));

        contact.setBackground(TEXT_INPUT_BG);
        contact.setForeground(TEXT_FG);
        contact.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });

        totaltickets.setBackground(TEXT_INPUT_BG);
        totaltickets.setForeground(TEXT_FG);
        totaltickets.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));
        totaltickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalticketsActionPerformed(evt);
            }
        });

        fares.setBackground(TEXT_INPUT_BG);
        fares.setForeground(TEXT_FG);
        fares.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));
        fares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faresActionPerformed(evt);
            }
        });

        discount.setBackground(TEXT_INPUT_BG);
        discount.setForeground(TEXT_FG);
        discount.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));
        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });

        totalFare.setBackground(TEXT_INPUT_BG);
        totalFare.setForeground(TEXT_FG);
        totalFare.setBorder(BorderFactory.createLineBorder(BORDER_COLOR));


        jButton2.setText("Book");
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Calculate Fare");
        jButton3.setFocusPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.setFocusPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Search");
        jButton5.setFocusPainted(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel7)
                                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                                .addComponent(jLabel9)
                                                                .addGap(16, 16, 16))
                                                        .addComponent(jLabel8))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                                        .addComponent(jLabel6)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                        .addComponent(customerid, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                                        .addComponent(jLabel10)
                                                                        .addGap(36, 36, 36)
                                                                        .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButton5))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                        .addComponent(jLabel13)
                                                        .addGap(26, 26, 26)
                                                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(138, 138, 138)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(18, 18, 18)
                                                .addComponent(totalFare, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addComponent(jButton2)
                                                .addGap(123, 123, 123)
                                                .addComponent(jButton4))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel12)
                                                        .addComponent(jLabel11))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(fares, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(totaltickets, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(66, 66, 66)
                                                .addComponent(jButton3)))
                                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(customerid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton5))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11)
                                        .addComponent(fares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(totaltickets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jButton3)))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel14)
                                        .addComponent(totalFare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(discount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(jButton2)
                                                .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(jButton4)
                                                .addGap(26, 26, 26))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(78, 78, 78)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(ticketid, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(513, 513, 513))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(449, 449, 449))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(ticketid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void AutoID() throws SQLException {
        Connection con = null;
        PreparedStatement pre = null;
        ResultSet rs = null;
        try {
            con = getConnection();

            pre = con.prepareStatement("SELECT MAX(TicketId) AS max_id FROM ticket");
            rs = pre.executeQuery();

            if (rs.next()) {
                String maxId = rs.getString("max_id");
                if (maxId == null) {
                    ticketid.setText("TC001");
                } else {
                    long id = Long.parseLong(maxId.substring(2));
                    id += 1;
                    ticketid.setText("TC" + String.format("%03d", id));
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "AutoID SQL Error", ex);
        }
        finally {
            try {
                if (rs != null) rs.close();
                if (pre != null) pre.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "Error closing AutoID resources", ex);
            }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Connection con = null;
        PreparedStatement pre = null;
        ResultSet rs = null;
        try {
            con = getConnection();

            String Arrival=arrival.getSelectedItem().toString();
            String Departure=departure.getSelectedItem().toString();

            pre=con.prepareStatement("select *from flight where arrival=? and departure=?");
            pre.setString(1,Arrival);
            pre.setString(2,Departure);

            rs=pre.executeQuery();
            ResultSetMetaData RSMD=rs.getMetaData();
            // int cc=RSMD.getColumnCount(); // Not strictly needed if you know the columns
            DefaultTableModel DFT=(DefaultTableModel) table.getModel();
            DFT.setRowCount(0);
            while(rs.next()){
                Vector<String> v=new Vector<>();
                v.add(rs.getString("flightID"));
                v.add(rs.getString("flightName"));
                v.add(rs.getString("arrival"));
                v.add(rs.getString("departure"));
                v.add(rs.getString("duration"));
                v.add(rs.getString("seats"));
                v.add(rs.getString("Fare"));
                v.add(rs.getString("DateOfFlight"));
                DFT.addRow(v);
            }

        } catch (SQLException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Driver not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (rs != null) rs.close();
                if (pre != null) pre.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "Error closing resources", ex);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void lastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastnameActionPerformed

    private void customeridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customeridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customeridActionPerformed

    private void totalticketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalticketsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalticketsActionPerformed

    private void faresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_faresActionPerformed

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Connection con = null;
        PreparedStatement pre = null;
        ResultSet rs = null;
        try {
            con = getConnection();
            String custID=customerid.getText();

            if (custID.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter a Customer ID.", "Input Error", JOptionPane.WARNING_MESSAGE);
                return;
            }

            pre = con.prepareStatement("select *from customer where customerID=?");
            pre.setString(1,custID);

            rs=pre.executeQuery();
            if(rs.next()){
                firstname.setText(rs.getString("firstName"));
                lastname.setText(rs.getString("lastName"));
                gender.setText(rs.getString("Gender"));
                contact.setText(rs.getString("contact"));
            }
            else{
                JOptionPane.showMessageDialog(this,"Customer with ID " + custID + " not found.","Not Found", JOptionPane.WARNING_MESSAGE);
                firstname.setText("");
                lastname.setText("");
                gender.setText("");
                contact.setText("");
            }
        } catch (SQLException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Driver not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (rs != null) rs.close();
                if (pre != null) pre.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "Error closing resources", ex);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void arrivalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrivalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrivalActionPerformed

    private void ticketidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticketidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ticketidActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if (fares.getText().isEmpty() || totaltickets.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Fare and Total Tickets.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int farePerTicket = Integer.parseInt(fares.getText());
            int numberOfTickets = Integer.parseInt(totaltickets.getText());

            if (farePerTicket <= 0 || numberOfTickets <= 0) {
                JOptionPane.showMessageDialog(this, "Fare and Total Tickets must be positive numbers.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            double totalAmount = (double) farePerTicket * numberOfTickets;
            double discountPercentage = 0.10;
            double discountAmount = totalAmount * discountPercentage;
            double finalFare = totalAmount - discountAmount;

            totalFare.setText(String.format("%.2f", finalFare));
            discount.setText(String.format("%.0f%%", discountPercentage * 100));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numbers for Fare and Total Tickets.", "Input Error", JOptionPane.ERROR_MESSAGE);
            totalFare.setText("");
            discount.setText("");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        try {
            int fareColumnIndex=6;
            int flightIdColumnIndex=0;
            int row=table.getSelectedRow();

            if (row == -1) return;

            flightID = table.getModel().getValueAt(row, flightIdColumnIndex).toString();
            String fareFromTable = table.getModel().getValueAt(row, fareColumnIndex).toString();

            fares.setText(fareFromTable);

        } catch (Exception ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "Error selecting flight from table", ex);
            JOptionPane.showMessageDialog(this, "Error selecting flight: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Connection con = null;
        PreparedStatement pre = null;
        try {
            con = getConnection();

            String TicketID = ticketid.getText();
            String FlightId = flightID;
            String CustomerId = customerid.getText();
            String Arrival = arrival.getSelectedItem().toString();
            String Departure = departure.getSelectedItem().toString();
            String FirstName = firstname.getText();
            String LastName = lastname.getText();
            String Gender = gender.getText();
            String Contact = contact.getText();

            if (TicketID.isEmpty() || FlightId == null || FlightId.isEmpty() || CustomerId.isEmpty() ||
                    FirstName.isEmpty() || LastName.isEmpty() || Gender.isEmpty() || Contact.isEmpty()) {
                JOptionPane.showMessageDialog(this, "All fields must be filled to book a ticket.", "Input Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (totalFare.getText().isEmpty() || Double.parseDouble(totalFare.getText()) <=0) {
                JOptionPane.showMessageDialog(this, "Please calculate the total fare before booking.", "Fare Calculation Required", JOptionPane.WARNING_MESSAGE);
                return;
            }


            pre = con.prepareStatement("INSERT INTO ticket(TicketID, FligthID, customerID, Arrival, Departure, FirstName, LastName, gender, contact) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)");

            pre.setString(1, TicketID);
            pre.setString(2, FlightId);
            pre.setString(3, CustomerId);
            pre.setString(4, Arrival);
            pre.setString(5, Departure);
            pre.setString(6, FirstName);
            pre.setString(7, LastName);
            pre.setString(8, Gender);
            pre.setString(9, Contact);

            pre.executeUpdate();

            JOptionPane.showMessageDialog(this, "Ticket Booked Successfully with ID: " + TicketID, "Success", JOptionPane.INFORMATION_MESSAGE);
            AutoID();
            clearAllFieldsForNewBooking();


        } catch (SQLException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Database error during booking: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Driver not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NullPointerException ex) {
            Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "Null value encountered", ex);
            JOptionPane.showMessageDialog(this, "Ensure a flight is selected from the table.", "Input Error", JOptionPane.WARNING_MESSAGE);
        }
        finally {
            try {
                if (pre != null) pre.close();
                if (con != null) con.close();
            } catch (SQLException ex) {
                Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "Error closing resources", ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // This is the Cancel button action
        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to cancel and clear all fields?",
                "Confirm Cancellation",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            clearAllFieldsForNewBooking();
            try {
                AutoID(); // Get a new ticket ID if they cancelled a booking in progress
            } catch (SQLException ex) {
                Logger.getLogger(BookTicket.class.getName()).log(Level.SEVERE, "Error generating new Ticket ID after cancel.", ex);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void clearAllFieldsForNewBooking() {
        // Clear customer and fare related fields
        customerid.setText("");
        firstname.setText("");
        lastname.setText("");
        gender.setText("");
        contact.setText("");
        fares.setText("");
        totaltickets.setText("");
        totalFare.setText("");
        discount.setText("");

        // Clear flight search and table
        arrival.setSelectedIndex(0); // Reset to default/first item
        departure.setSelectedIndex(0); // Reset to default/first item
        DefaultTableModel DFT=(DefaultTableModel) table.getModel();
        DFT.setRowCount(0);

        flightID = null; // Reset selected flightID
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> arrival;
    private javax.swing.JTextField contact;
    private javax.swing.JTextField customerid;
    private javax.swing.JComboBox<String> departure;
    private javax.swing.JTextField discount;
    private javax.swing.JTextField fares;
    private javax.swing.JTextField firstname;
    private javax.swing.JTextField gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastname;
    private javax.swing.JTable table;
    private javax.swing.JTextField ticketid;
    private javax.swing.JTextField totalFare;
    private javax.swing.JTextField totaltickets;
    // End of variables declaration//GEN-END:variables
}